# 1. Configmap
apiVersion: v1
kind: ConfigMap
metadata:
  name: teleport-agent-config
data:
  teleport.yaml: |
    version: v3
    teleport:
      proxy_server: teleport.pearlinvest.click:443
      log:
        output: stderr
        severity: INFO
      join_params:
        token_name: /var/lib/teleport/secrets/auth-token
        method: token
    
    kubernetes_service:
      enabled: yes
      kube_cluster_name: pearl-invest-backend
      labels:
        env: production
        team: backend
    
    ssh_service:
      enabled: no
    auth_service:
      enabled: no
    proxy_service:
      enabled: no

    # auth_token은 join_params로 이동
---
# 3. RBAC
apiVersion: v1
kind: ServiceAccount
metadata:
  name: teleport-agent-sa
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: teleport-agent-role
rules:
  # 사용자/그룹 impersonation - resourceNames 제거!
  - apiGroups: [""]
    resources: ["users", "groups", "serviceaccounts"]
    verbs: ["impersonate"]
    # resourceNames: ["*"] <- 이 줄을 제거해야 함
  
  # 권한 체크
  - apiGroups: ["authorization.k8s.io"]
    resources: ["subjectaccessreviews", "selfsubjectaccessreviews", "selfsubjectrulesreviews"]
    verbs: ["create"]
  
  # Pod 실행 관련 권한 추가 (중요!)
  - apiGroups: [""]
    resources: ["pods", "pods/log", "pods/exec", "pods/portforward", "pods/attach"]
    verbs: ["*"]
  
  # 클러스터 정보 읽기 - 권한 확장
  - apiGroups: [""]
    resources: ["namespaces", "pods", "services", "nodes", "configmaps", "secrets", "serviceaccounts", "persistentvolumeclaims", "events"]
    verbs: ["get", "list", "watch"]
  
  # Apps 리소스 - watch 권한 추가
  - apiGroups: ["apps"]
    resources: ["deployments", "replicasets", "statefulsets", "daemonsets"]
    verbs: ["get", "list", "watch"]
  
  # Batch 리소스 추가
  - apiGroups: ["batch"]
    resources: ["jobs", "cronjobs"]
    verbs: ["get", "list", "watch"]
  
  - apiGroups: ["extensions", "networking.k8s.io"]
    resources: ["ingresses"]
    verbs: ["get", "list", "watch"]
  
  # RBAC 리소스 읽기 권한 추가
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources: ["roles", "rolebindings", "clusterroles", "clusterrolebindings"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: teleport-agent-rolebinding
subjects:
  - kind: ServiceAccount
    name: teleport-agent-sa
    namespace: teleport-agent  # 실제 배포할 namespace로 변경
roleRef:
  kind: ClusterRole
  name: teleport-agent-role
  apiGroup: rbac.authorization.k8s.io
---
# 3. Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: teleport-agent
  labels:
    app: teleport-agent
spec:
  replicas: 1
  selector:
    matchLabels:
      app: teleport-agent
  template:
    metadata:
      labels:
        app: teleport-agent
    spec:
      serviceAccountName: teleport-agent-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
        - name: teleport-agent
          image: teleport-agent  # 구체적인 버전 지정
          imagePullPolicy: IfNotPresent  # 프로덕션 환경에 적합
          args: ["start", "--config=/etc/teleport/teleport.yaml", "--pid-file=/var/lib/teleport/teleport.pid"]
          ports:
            - containerPort: 3025
              name: kube
              protocol: TCP
          volumeMounts:
            - name: config-volume
              mountPath: /etc/teleport
              readOnly: true
            - name: token-volume
              mountPath: /var/lib/teleport/secrets
              readOnly: true
            - name: data-volume
              mountPath: /var/lib/teleport
          resources:
            limits:
              memory: "512Mi"  # 메모리 제한 증가
              cpu: "500m"
            requests:
              memory: "256Mi"  # 요청량도 증가
              cpu: "100m"
          livenessProbe:
            httpGet:
              path: /healthz
              port: 3025
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /readyz
              port: 3025
            initialDelaySeconds: 10
            periodSeconds: 5
          env:
            - name: TELEPORT_CLUSTER_NAME
              value: "pearl-invest-backend"
      volumes:
        - name: config-volume
          configMap:
            name: teleport-agent-config
        - name: token-volume
          secret:
            secretName: teleport-join-token
            items:
              - key: auth-token
                path: auth-token
        - name: data-volume
          emptyDir: {}
      restartPolicy: Always